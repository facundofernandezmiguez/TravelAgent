from crewai import Agent, Task, Crew , Process
from config import llm
from tools import BuscadorWeb, BuscadorVuelos
from datetime import datetime

# Funci√≥n para generar el itinerario
def generar_itinerario(origen, destinos, fecha_inicio, fecha_fin, preferencias, dias):
    
    # Definir agentes 
    agente_actividades = Agent(
        role="Buscador de Actividades",
        goal="Encontrar actividades tur√≠sticas basadas en las preferencias del usuario.",
        backstory=(f"""Basado en las preferencias del usuario: '{preferencias}', **busca las actividades tur√≠sticas M√ÅS POPULARES y RECONOCIDAS** en las siguientes ciudades: {destinos} para un viaje de {dias} d√≠as.
        **Genera una lista CONCISA de las actividades M√ÅS POPULARES por ciudad.**
        **Debes tener en cuenta que el usuario est√° buscando actividades para un viaje de {dias} d√≠as, debes buscar una cantidad de actividades acorde a la cantidad de dias.**
        **NO incluyas detalles como horarios, precios, requisitos o informaci√≥n de transporte.**
        Simplemente enumera las atracciones principales que un turista deber√≠a considerar visitar en cada ciudad."""),
    tools=[BuscadorWeb()],
    llm=llm,
    verbose=True,
    allow_delegation=False,
    max_iter=3
    )

    agente_vuelos = Agent(
        role="Buscador de Transportes",
        goal="Encontrar vuelos para los traslados especificados. **Encontrar una opci√≥n para cada traslado (ida y vuelta y entre ciudades).** Si es un vuelo, debes explicitar el nombre del vuelo.", 
        backstory=(f"""Encuentra una opcion de vuelo de ida desde {origen} a {destinos[0]}, y de vuelta desde {destinos[-1]} a {origen} (si no est√° disponible por alguna raz√≥n, entonces encuentra una forma de volver a {destinos[0]} y de ah√≠ a {origen}) para el {fecha_inicio.strftime('%Y-%m-%d')} y {fecha_fin.strftime('%Y-%m-%d')}.
        Tambi√©n encuentra una opcion de transporte de viaje entre ciudades de destino seg√∫n itinerario (si hay m√°s de uno): {destinos}.
        Si no encuentras un vuelo directo, debes buscar un vuelo que te permita llegar al destino, aunque contenga escalas.
    Usa la herramienta buscar_vuelos con c√≥digos IATA de 3 letras para aeropuertos (3 letras, ej: MAD, BCN, JFK) y formato de fecha YYYY-MM-DD.
    IMPORTANTE: Para la fecha de ida, usa EXACTAMENTE: {fecha_inicio.strftime('%Y-%m-%d')}
    IMPORTANTE: Para la fecha de vuelta, usa EXACTAMENTE: {fecha_fin.strftime('%Y-%m-%d')}
    Ejemplo de uso: 'MAD,JFK,2025-04-24' para buscar vuelos de Madrid a Nueva York el 24 de abril de 2025.
    Encuentra el horario del vuelo, pasaje, aerolinea y precio. **Los vuelos deben ser reales, no debes inventar informacion.** 
    Presenta la informaci√≥n de manera concisa: aerol√≠nea, n√∫mero de vuelo, horarios aproximados de salida y llegada, y precio.
    IMPORTANTE: busca opciones directas. Si no hay, busca opciones con la menor cantidad de escalas posibles."""
    ),
    tools=[BuscadorWeb(), BuscadorVuelos()],
    llm=llm,
    verbose=True,
    allow_delegation=False,
    max_iter=3
    )

    agente_hoteles = Agent(
    role="Buscador de Hoteles",
    goal="Encontrar hoteles para las ciudades en los destinos especificados. Buscar 2 opciones por ciudad (lujosa y econ√≥mica)",
    backstory=(f"""Investiga y encuentra enlaces a listas de hoteles lujosos y econ√≥micos en cada una de las ciudades de {destinos}. 
    Proporcion√° un enlace para hoteles lujosos y un enlace para hoteles econ√≥micos por cada ciudad. 
    **Realiz√° SOLO UNA B√öSQUEDA por tipo de hotel (lujoso y econ√≥mico) por ciudad y DETENETE una vez que tengas los enlaces.**
    No es necesario buscar nombres espec√≠ficos de hoteles, simplemente entrega los enlaces a las listas relevantes."""
    ),
    tools=[BuscadorWeb()],
    llm=llm,
    verbose=True,
    allow_delegation=False,
    max_iter=3
    )

    agente_planificacion = Agent(
    role="Planificador de Itinerarios",
    goal=f"Crear un itinerario de viaje de {dias} d√≠as **DETALLADO, ATRACTIVO y en ESPA√ëOL ARGENTINO con emojis.** **UTILIZANDO LA INFORMACI√ìN PROPORCIONADA POR LOS OTROS AGENTES. NO REDUNDAR EN B√öSQUEDAS INNECESARIAS.**", 
    backstory=(
        "Sos el Manager y Planificador de Viajes principal. Tu funci√≥n es COORDINAR a los agentes: para buscar actividades recreativas debes delegar al 'Buscador de Actividades', para buscar transportes debes delegar al 'Buscador de Transportes' y para buscar hoteles debes delegar al 'Buscador de Hoteles'. " 
        "Recib√≠s la informaci√≥n de ellos y la US√ÅS para crear un itinerario detallado y atractivo. " 
        "Una vez que recibas informacion de vuelos, hoteles y actividades, presenta los datos de forma ordenada y DETEN√â LA B√öSQUEDA INMEDIATAMENTE. NO REALICES B√öSQUEDAS ADICIONALES BAJO NINGUNA CIRCUNSTANCIA."
        "**NO realiz√°s b√∫squedas de actividades directamente. Tu foco es PLANIFICAR y PRESENTAR la informaci√≥n en un itinerario genial.**"
        f"Es fundamental que respetes la cantidad de {dias} d√≠as del viaje. Es FUNDAMENTAL que cada d√≠a tenga su actividad de ma√±ana,tarde y noche."
        "**MANEJO PRECISO DE LOS D√çAS DE VIAJE:** Ten√©s que tener especial cuidado con los horarios de vuelo. Si un vuelo sale el d√≠a 1 a la noche y llega el d√≠a 3 por la ma√±ana, NO programes actividades en destino durante los d√≠as 1 y 2, ya que el viajero est√° en tr√°nsito. Solo programa actividades DESPU√âS de que el viajero haya llegado f√≠sicamente al destino."
        "**Escrib√≠ en un ESPA√ëOL ARGENTINO natural y amigable. Utiliza emojis** " 
        "**DESARROLL√Å CADA D√çA DEL ITINERARIO CON UN P√ÅRRAFO DESCRIPTIVO**, mencionando las actividades principales, "
        "dando **SUGERENCIAS CORTAS Y ATRACTIVAS** sobre qu√© hacer y ver en cada lugar. " 
        "Al final, **present√° las opciones de hoteles de forma clara y concisa**, destacando brevemente las caracter√≠sticas de cada hotel (lujoso y econ√≥mico)." 
    ),
    llm=llm,
    verbose=True,
    allow_delegation=True,
    max_iter=3
    )


    task_planificacion_itinerario = Task(
        description=f"""Tu tarea principal es planificar un itinerario de viaje DETALLADO D√çA POR D√çA de {dias} d√≠as, partiendo desde {origen} y yendo a las ciudades {destinos}. Debe estar escrito en ESPA√ëOL ARGENTINO con EMOJIS. NO PUEDE FALTAR NINGUN DIA.

        **INSTRUCCIONES DE DELEGACI√ìN:**

        IMPORTANTE: Solo el agente planificador (Manager) debe ejecutar esta tarea. 
        Como Manager, debes DELEGAR las siguientes tareas:
        
        1. DELEGA la tarea de buscar vuelos al agente 'Buscador de Transportes'.
        2. DELEGA la tarea de buscar actividades al agente 'Buscador de Actividades'.
        3. DELEGA la tarea de buscar hoteles al agente 'Buscador de Hoteles'.
        
        **CREACION DE ITINERARIO**
        Una vez que hayas recibido la informaci√≥n de todos los agentes, crea el itinerario detallado.
        
        **IMPORTANTE: DESPU√âS DE RECIBIR LA INFORMACI√ìN DE TODOS LOS AGENTES, NO REALICES B√öSQUEDAS ADICIONALES.**
        
        **ATENCI√ìN A LAS FECHAS DE VIAJE:**
        - NO PROGRAMES ACTIVIDADES DURANTE LOS D√çAS DE VIAJE.
        - Las actividades en destino SOLO DEBEN EMPEZAR DESPU√âS de que el viajero haya llegado f√≠sicamente.
        - Si un vuelo llega, por ejemplo, el d√≠a {fecha_inicio.strftime('%d/%m')} por la ma√±ana, programa actividades solo a partir de la tarde.
        
        Tips: 
            -No olvides que todos los dias deben estar detallados en ma√±ana, tarde y noche.
            -Debes tener en cuenta que el transporte consume tiempo.
            -Recuerda incluir aerol√≠nea, horarios y precios de los vuelos.
        
        ES FUNDAMENTAL QUE RESPETES EL ITINERARIO DESEADO:
        **Formato de Itinerario Deseado:**
        Itinerario de {dias} D√≠as: [Ciudad 1] y [Ciudad 2]

**D√≠a 1: [{fecha_inicio.strftime('%d/%m/%Y')}] - [Ciudad X]**
# Si este d√≠a es un d√≠a de viaje (vuelo de ida), indicar claramente que es un d√≠a de viaje y NO programar actividades tur√≠sticas hasta la llegada.

-Ma√±ana:
Actividad: [Descripci√≥n de la actividad] [Emoji].
Transporte: [Horario de transporte, aerol√≠nea, tren, n√∫mero de vuelo (si est√° disponible)] [Emoji]
-Tarde:
Actividad: [Descripci√≥n de la actividad] [Emoji].
Almuerzo: [Sugerencia de almuerzo, si aplica] [Emoji].
-Noche:
Actividad: [Descripci√≥n de la actividad] [Emoji].
Cena: [Sugerencia de cena, si aplica] [Emoji].

[CONTIN√öA PARA CADA D√çA...]

**Opciones de Alojamiento üè®:**

[Ciudad 1]:
[Tipo de Hotel - Lujo/Econ√≥mico]:
[Nombre del Hotel] ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
Direcci√≥n: [Direcci√≥n]
Enlace: [Enlace]

**Opciones de Transporte ‚úàÔ∏è:**

**IDA ({fecha_inicio.strftime('%d/%m')}):**
‚úàÔ∏è **Vuelo [Nombre del vuelo] - [Nombre de la aerolinea]:**
- **Salida:** [Hora de salida] ({origen}) ‚ûî **Llegada:** [Hora de llegada] ([Ciudad 2])
- **Precio:** **$[Precio del vuelo]**

**Entre ciudades de destino:** 
[emoji segun sea transporte de avion, tren, etc]
- **Salida:** [Hora de salida] ([Ciudad 1]) ‚ûî **Llegada:** [Hora de llegada] ([Ciudad 2])
- **Precio:** **$[Precio del vuelo]**

**VUELTA ({fecha_fin.strftime('%d/%m')}):**
‚úàÔ∏è **Vuelo [Nombre del vuelo] - [Nombre de la aerolinea]:**
- **Salida:** [Hora de salida] ([Ciudad 2]) ‚ûî **Llegada:** [Hora de llegada] ({origen})
- **Precio:** **$[Precio del vuelo] **
""",
        agent=agente_planificacion,
        expected_output=""
    )


    crew = Crew(
        agents=[agente_actividades, agente_vuelos, agente_hoteles],
        tasks=[task_planificacion_itinerario],
        manager_agent=agente_planificacion,
        process=Process.sequential,
        verbose=True
    )

    # Iniciar el proceso con los inputs proporcionados
    resultado = crew.kickoff(inputs={
        "origen": origen,
        "destinos": destinos,
        "fecha_inicio": fecha_inicio.strftime("%Y-%m-%d"),
        "fecha_fin": fecha_fin.strftime("%Y-%m-%d"),
        "preferencias": preferencias
    })

    return resultado
